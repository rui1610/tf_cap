name: Setup infrastructure (all options)

on:
  workflow_dispatch:

env:
  TARGET_BRANCH: main
  CF_METADATA_FILENAME_TO_USE: hana/cloudfoundry_hana.tfvars
  CF_METADATA_FILENAME_HANA: hana/cloudfoundry_hana.tfvars
  CF_METADATA_FILENAME_INMEMORY: inmemory/cloudfoundry_inmemory.tfvars
  CF_METADATA_FILE_EXISTS: false
  GITHUB_REPO_VARS: terraform.env
  REPO_NAME:
  GENERATED_GH_REPONAME:
  CF_ORG_NAME:
  CF_SPACE_NAME:
  DEPLOYMENT_TYPE:
  FOLDER_TERRAFORM_SCRIPTS:
  TF_ACTION_WORKING_DIR:


# Taken from https://github.com/hashicorp/setup-terraform
jobs:
  determine_execution_values:
    name: Check infrastructure status
    runs-on: ubuntu-latest
    outputs:
      cf_metadatafile_exists: ${{ steps.cf_metadata_exists.outputs.cf_metadatafile_exists }}
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        ref: ${{ env.TARGET_BRANCH }}
    - name: Get repo name and deployment option
      working-directory: ${{ env.TARGET_BRANCH }}
      shell: bash
      run: |
        cd ..
        source "$GITHUB_REPO_VARS"
        echo "GENERATED_GH_REPONAME=$GENERATED_REPO_NAME"  >> $GITHUB_ENV
        echo "DEPLOYMENT_TYPE=$DEPLOYMENT_TYPE"  >> $GITHUB_ENV
    - name: Determine deployment option
      working-directory: terraform
      shell: bash
      run: |
        if [ "$DEPLOYMENT_TYPE" == "HANA" ]
        then
          echo "CF_METADATA_FILENAME_TO_USE=$CF_METADATA_FILENAME_HANA"  >> $GITHUB_ENV
          echo "FOLDER_TERRAFORM_SCRIPTS=hana"  >> $GITHUB_ENV
          echo "TF_ACTION_WORKING_DIR=terraform/hana"  >> $GITHUB_ENV
        fi
        if [ "$DEPLOYMENT_TYPE" == "IN_MEMORY" ]
        then
          echo "CF_METADATA_FILENAME_TO_USE=$CF_METADATA_FILENAME_INMEMORY"  >> $GITHUB_ENV
          echo "FOLDER_TERRAFORM_SCRIPTS=inmemory"  >> $GITHUB_ENV
          echo "TF_ACTION_WORKING_DIR=terraform/inmemory"  >> $GITHUB_ENV
        fi
    - name: Determine if infra setup already done
      working-directory: terraform
      id: cf_metadata_exists
      shell: bash
      run: |
        if [ -f "$CF_METADATA_FILENAME_TO_USE" ]; then
          echo "cf_metadatafile_exists=true" >> $GITHUB_OUTPUT && echo "The CF metadata file exists!"
          source "$CF_METADATA_FILENAME"
          echo "CF_ORG_NAME  =$cloudfoundry_org_name" >> $GITHUB_ENV
          echo "CF_SPACE_NAME =$cloudfoundry_space_name" >> $GITHUB_ENV
        else 
          echo "cf_metadatafile_exists=false" >> $GITHUB_OUTPUT && echo "The CF metadata file doesn't exist!"
        fi
    - name: "Get repo folder in container"
      shell: bash
      run: |
        echo "REPO_NAME=/__w/$(basename ${{ github.repository }})/$(basename ${{ github.repository }})" >> $GITHUB_ENV
  
  setup_infrastructure:
    if: ${{needs.determine_execution_values.outputs.cf_metadatafile_exists == 'false'}}
    name: Run Terraform script
    runs-on: ubuntu-latest
    needs: [determine_execution_values]
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        ref: ${{ env.TARGET_BRANCH }}
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false
    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: ${{ env.TF_ACTION_WORKING_DIR }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_ACTION_WORKING_DIR: 'terraform_inmemory'
      shell: bash
    - name: Terraform Apply
      id: terraform_apply
      run: terraform apply -auto-approve -var repo_name=${{ env.GENERATED_GH_REPONAME }}
      working-directory: ${{ env.TF_ACTION_WORKING_DIR }}
      env:      
        TARGET_BRANCH: ${{ env.TARGET_BRANCH }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_ACTION_WORKING_DIR: 'terraform_inmemory'
        BTP_USERNAME: ${{ secrets.BTP_USERNAME }}
        BTP_PASSWORD: ${{ secrets.BTP_PASSWORD }}
        CF_USER: ${{ secrets.BTP_USERNAME }}
        CF_PASSWORD: ${{ secrets.BTP_PASSWORD }}
      shell: bash
    - name: Terraform Output
      id: terraform_output
      working-directory: ${{ env.TF_ACTION_WORKING_DIR }}
      run: |
        echo "CF_ORG_NAME=$(terraform output cloudfoundry_org_name)" >> $GITHUB_ENV
        echo "CF_SPACE_NAME=$(terraform output cloudfoundry_space_name)" >> $GITHUB_ENV
        echo "CF_ORG_NAME=$(terraform output cloudfoundry_org_name)" > $CF_METADATA_FILENAME_TO_USE
        echo "CF_SPACE_NAME=$(terraform output cloudfoundry_space_name)" >> $CF_METADATA_FILENAME_TO_USE
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_ACTION_WORKING_DIR: 'terraform_inmemory'
      shell: bash
    - name: Commit and push changes
      run: |
        git add -A
        git config user.email "tfbtpbot@users.noreply.github.com"
        git config user.name "[tf_btp bot] storage of cf info"
        git diff --quiet && git diff --staged --quiet || git commit -m "[tf_btp bot] Store retrieved cloudfoundry metadata."
        git push origin ${{ env.TARGET_BRANCH }}
