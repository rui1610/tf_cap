name: Setup infrastructure for app
# This file defines a workflow that calls the btp-setup-automator and deploys a
# use case around building resilient apps 
# see https://github.com/SAP-samples/btp-build-resilient-apps

on:
  workflow_dispatch:

  pull_request:
    types: [closed]
    branches:
      - main

# Taken from https://github.com/hashicorp/setup-terraform
jobs:
  infrastructure1:
    name: Run Terraform script
    runs-on: ubuntu-latest
    outputs:
      cloudfoundry_org_id: ${{ steps.terraform_output.outputs.cloudfoundry_org_id }}
      subaccount_id: ${{ steps.terraform_output.outputs.subaccount_id }}
      subaccount_name: ${{ steps.terraform_output.outputs.subaccount_name }}
      cloudfoundry_space_id: ${{ steps.terraform_output.outputs.cloudfoundry_space_id }}
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: "Get repo folder in container"
      shell: bash
      run: |
        echo "REPO_NAME=/__w/$(basename ${{ github.repository }})/$(basename ${{ github.repository }})" >> $GITHUB_ENV
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false
    - name: Terraform Init
      id: init
      run: terraform init
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_ACTION_WORKING_DIR: 'terraform'
      working-directory: terraform
      shell: bash
    - name: Terraform Apply
      id: terraform_apply
      run: terraform apply -auto-approve
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_ACTION_WORKING_DIR: 'terraform'
        BTP_USERNAME: ${{ secrets.BTP_USERNAME }}
        BTP_PASSWORD: ${{ secrets.BTP_PASSWORD }}
        CF_USER: ${{ secrets.BTP_USERNAME }}
        CF_PASSWORD: ${{ secrets.BTP_PASSWORD }}
      working-directory: terraform
      shell: bash
    - name: Terraform Ouput
      id: terraform_output
      run: |
        echo "cloudfoundry_org_id=$(terraform output cloudfoundry_org_id)" >> $GITHUB_OUTPUT 
        echo "subaccount_id=$(terraform output subaccount_id)" >> $GITHUB_OUTPUT 
        echo "subaccount_name=$(terraform output subaccount_name)" >> $GITHUB_OUTPUT 
        echo "cloudfoundry_space_id=$(terraform output cloudfoundry_space_id)" >> $GITHUB_OUTPUT 
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_ACTION_WORKING_DIR: 'terraform'
      working-directory: terraform
      shell: bash

  build-cap-application:
    name: Build CAP application
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/rui1610/tf_cap:main
      options: --user root
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: "Get repo folder in container"
      working-directory: /home/user
      shell: bash
      run: |
        echo "REPO_NAME=/__w/$(basename ${{ github.repository }})/$(basename ${{ github.repository }})" >> $GITHUB_ENV
    - name: 'Start build process for CAP app'
      working-directory: ${{ env.REPO_NAME }}/demo-app
      shell: bash
      run: |
        mbt build -t ./
        ls -l

  deploy-cap-application:
    name: Deploy CAP application
    runs-on: ubuntu-latest
    needs: infrastructure1
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: "Get repo folder in container"
      working-directory: /home/user
      shell: bash
      run: |
        echo "REPO_NAME=/__w/$(basename ${{ github.repository }})/$(basename ${{ github.repository }})" >> $GITHUB_ENV
    - name: 'Start build process for CAP app'
      working-directory: ${{ env.REPO_NAME }}/demo-app
      shell: bash
      env:
        CF_ORG_ID: ${{needs.infrastructure1.outputs.cloudfoundry_org_id}}
        CF_SPACE_ID: ${{needs.infrastructure1.outputs.cloudfoundry_space_id}}
        SUBACCOUNT_ID: ${{needs.infrastructure1.outputs.subaccount_id}}
        SUBACCOUNT_NAME: ${{needs.infrastructure1.outputs.subaccount_name}}
      run: |
        cf api https://api.cf.us10.hana.ondemand.com
        cf auth ${{ secrets.BTP_USERNAME }} "${{ secrets.BTP_PASSWORD }}"
        cf target -o $CF_ORG_ID
        cf target -s '$CF_SPACE_NAME'
        cd demo-app
        cf deploy cpapp_1.0.0.mtar

      